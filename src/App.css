.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
// Root file: src/App.jsx
import React from 'react';
import Sidebar from './components/Sidebar';
import Header from './components/Header';
import Dashboard from './pages/Dashboard';

export default function App() {
  return (
    <div className="flex h-screen bg-gray-100">
      <Sidebar />
      <div className="flex flex-col flex-1">
        <Header />
        <main className="p-6 overflow-auto">
          <Dashboard />
        </main>
      </div>
    </div>
  );
}


// File: src/components/Sidebar.jsx
import React from 'react';

const navItems = [
  'Dashboard', 'Revenue Analytics', 'Journeys', 'Performance', 'Data Platform', 'Settings', 'Help'
];

export default function Sidebar() {
  return (
    <aside className="w-64 bg-gray-900 text-white flex flex-col p-4">
      <div className="text-2xl font-bold mb-8">UNIFYDATA</div>
      <nav className="flex flex-col gap-4">
        {navItems.map((item) => (
          <button key={item} className="text-left hover:text-green-400">{item}</button>
        ))}
      </nav>
    </aside>
  );
}


// File: src/components/Header.jsx
import React from 'react';

export default function Header() {
  return (
    <header className="p-4 bg-white shadow flex justify-end">
      <input
        type="text"
        placeholder="Search..."
        className="px-3 py-2 border rounded w-64"
      />
    </header>
  );
}


// File: src/pages/Dashboard.jsx
import React from 'react';
import MetricCards from '../sections/MetricCards';
import DealsRevenueChart from '../sections/DealsRevenueChart';
import CampaignPerformance from '../sections/CampaignPerformance';
import RevenueChannelsPie from '../sections/RevenueChannelsPie';

export default function Dashboard() {
  return (
    <div className="grid gap-6 grid-cols-1 xl:grid-cols-3">
      <div className="col-span-2 grid gap-6">
        <MetricCards />
        <DealsRevenueChart />
        <CampaignPerformance />
      </div>
      <RevenueChannelsPie />
    </div>
  );
}


// File: src/sections/MetricCards.jsx
import React from 'react';

const metrics = [
  { label: 'Visitors', value: '30,794', change: '+22%' },
  { label: 'Contacts', value: '1,983', change: '+21%' },
  { label: 'Attributable Deals', value: '57.0', change: '+12.6%' },
  { label: 'Revenue', value: '$10,622.21', change: '+15.2%' },
];

export default function MetricCards() {
  return (
    <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
      {metrics.map((metric) => (
        <div key={metric.label} className="bg-white p-4 shadow rounded">
          <h3 className="text-gray-600 text-sm">{metric.label}</h3>
          <p className="text-xl font-bold">{metric.value}</p>
          <p className="text-green-500 text-sm">{metric.change}</p>
        </div>
      ))}
    </div>
  );
}


// File: src/sections/DealsRevenueChart.jsx
import React from 'react';
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';

const data = [
  { month: 'May', deals: 3, revenue: 200 },
  { month: 'Jun', deals: 4, revenue: 400 },
  { month: 'Jul', deals: 5, revenue: 600 },
  { month: 'Aug', deals: 4, revenue: 500 },
  { month: 'Sep', deals: 6, revenue: 800 },
  { month: 'Oct', deals: 5, revenue: 700 },
];

export default function DealsRevenueChart() {
  return (
    <div className="bg-white p-4 shadow rounded">
      <h3 className="text-gray-600 text-lg mb-4">Deals & Revenue</h3>
      <ResponsiveContainer width="100%" height={200}>
        <LineChart data={data}>
          <XAxis dataKey="month" />
          <YAxis yAxisId="left" orientation="left" />
          <YAxis yAxisId="right" orientation="right" />
          <Tooltip />
          <Line yAxisId="left" type="monotone" dataKey="deals" stroke="#8884d8" />
          <Line yAxisId="right" type="monotone" dataKey="revenue" stroke="#82ca9d" />
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
}


// File: src/sections/CampaignPerformance.jsx
import React from 'react';

const campaigns = [
  { name: 'ROQ', visitors: 1181, contacts: 217, companies: 150, leads: 26.9, value: '$78.29' },
  { name: 'Website Ads', visitors: 998, contacts: 182, companies: 121, leads: 20.1, value: '$63.21' },
  { name: 'Demo', visitors: 891, contacts: 145, companies: 81, leads: 14.2, value: '$48.39' },
  { name: 'Global', visitors: 541, contacts: 98, companies: 67, leads: 10.7, value: '$35.71' },
];

export default function CampaignPerformance() {
  return (
    <div className="bg-white p-4 shadow rounded">
      <h3 className="text-gray-600 text-lg mb-4">Campaign Performance</h3>
      <table className="w-full text-sm text-left">
        <thead className="text-gray-500">
          <tr>
            <th>No.</th><th>Campaign</th><th>Visitors</th><th>Contacts</th><th>Companies</th><th>Leads</th><th>Value</th>
          </tr>
        </thead>
        <tbody>
          {campaigns.map((c, idx) => (
            <tr key={c.name} className="border-t">
              <td>{idx + 1}</td><td>{c.name}</td><td>{c.visitors}</td><td>{c.contacts}</td><td>{c.companies}</td><td>{c.leads}</td><td className="text-green-500">{c.value}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}


// File: src/sections/RevenueChannelsPie.jsx
import React from 'react';
import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';

const data = [
  { name: 'Direct', value: 400 },
  { name: 'Paid', value: 300 },
  { name: 'Social', value: 200 },
  { name: 'Other', value: 100 },
];

const COLORS = ['#82ca9d', '#8884d8', '#ffc658', '#ff8042'];

export default function RevenueChannelsPie() {
  return (
    <div className="bg-white p-4 shadow rounded">
      <h3 className="text-gray-600 text-lg mb-4">Top Revenue Channels</h3>
      <ResponsiveContainer width="100%" height={250}>
        <PieChart>
          <Pie data={data} dataKey="value" nameKey="name" outerRadius={80} label>
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
            ))}
          </Pie>
          <Tooltip />
        </PieChart>
      </ResponsiveContainer>
    </div>
  );
}
